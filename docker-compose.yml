version: '3.1'

services:

  web_server:
    build:
      context: ../
      dockerfile: ./.docker/compose/web/Dockerfile
    image: $WP_CONTAINER_NAME:new
    container_name: $WP_CONTAINER_NAME
    restart: always
    depends_on:
      - db_server
      - mailhog_server
    ports:
      - ${WEB_PORT}:80
    environment:
      WORDPRESS_DB_HOST: db_server
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
    volumes:
      - ./../:/var/www/html
      - ./compose/web/localhost.conf:/etc/apache2/sites-enabled/000-default.conf
    networks:
      - internal

  db_server:
    image: mysql:5.7
    container_name: $DB_CONTAINER_NAME
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - ${DB_PORT}:3306
    volumes:
      - local_db_data:/var/lib/mysql
      - ./compose/dbdump:/var/lib/dbdump
      - ./compose/scripts/import-database.sh:/usr/local/bin/import-database.sh
      - ./compose/scripts/dump-database.sh:/usr/local/bin/dump-database.sh
    networks:
      - internal

  mailhog_server:
    hostname: mailhog.${APP_URL}
    image: mailhog/mailhog:latest
    container_name: ${APP_NAME}-${APP_ENV}-mailhog
    ports:
      - 1025:1025             # smtp server
      - ${MAILHOG_PORT}:8025  # web ui
    networks:
      - internal

  adminer:
    image: adminer
    restart: always
    container_name: ${APP_NAME}-${APP_ENV}-adminer
    ports:
      - ${DBADMIN_PORT}:8080
    depends_on:
      - db_server
    networks:
      - internal

volumes:
  local_db_data: {}

networks:
  internal:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.220.0/28
